Thought:
1.Create the rows labeled with a row #, and the columns filled in with a Name or Null Value
2.Aggregate the rows together using the group by RowNumber and the min statement. As below 'min()/max() will return a name for specific index and specific occupation. If there is a name, it will return name, if not, return Null.
Reference: https://stackoverflow.com/questions/1241178/mysql-rows-to-columns/9668036#9668036

MySQL:

set @r1=0,@r2=0,@r3=0,@r4=0;
select min(Doctor),min(Professor),min(Singer),min(Actor)
from(
        Select case when occupation='Doctor' then (@r1:=@r1+1)
            when occupation='Professor' then (@r2:=@r2+1)
            when occupation='Singer' then (@r3:=@r3+1)
            when occupation='Actor' then (@r4:=@r4+1)
        end as RowNumber,
        Case when occupation='Doctor' then Name end as Doctor,
        Case when occupation='Professor' then Name end as Professor,
        Case when occupation='Singer' then Name end as Singer,
        Case when occupation='Actor' then Name end as Actor
        from occupations
        Order by Name) as Temp
group by RowNumber;
